1. Find total message send that are newer than 01.01.2020, not include names that start with "E"
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX insta: <http://www.semanticweb.org/tonit/ontologies/2020/3/Instagram.owl#>
SELECT  ?UserAccount (COUNT(?UserAccount) as ?totalMessageSend)
WHERE
{
	?Chat insta:hasSender ?UserAccount.
	?Chat insta:DateMesage ?dateMessage
	FILTER (?dateMessage >= "2020-01-01T00:00:00"^^xsd:dateTime) .
	?UserAccount insta:Name ?name
	FILTER regex(?name, "[^Endrit]")
		FILTER regex(?name, "^(?!E)")
}

Group by ?UserAccount
HAVING (COUNT(?UserAccount)>0)
Order by DESC(?totalMessageSend)
LIMIT   5


2. Find total received messages that are send and optionaly get image format if it exists.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX insta: <http://www.semanticweb.org/tonit/ontologies/2020/3/Instagram.owl#>
SELECT ?UserAccount  (count(?UserAccount) as ?totalReceive) ?imgFormat 
WHERE
{
	?Chat insta:hasReceiver ?UserAccount.
	Optional {
		?Chat insta:ImageFormat ?imgFormat
	}

}
Group by ?UserAccount ?idChat ?imgFormat
HAVING (COUNT(?UserAccount)>0)
Order by DESC(?totalMessageSend)
LIMIT  5
