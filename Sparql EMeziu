1. Find the most answered question sticker stories, also display the number of answers for each question option  
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX owl: <http://www.w3.org/2002/07/owl#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX insta: <http://www.semanticweb.org/tonit/ontologies/2020/3/Instagram.owl#> 
SELECT  ?question  ?option (count(?option) as ?opt)  ?responses 
WHERE
{ 
	?account insta:hasAnsweredQuestion ?question. 
	?account insta:hasChosenOption ?option 
	{
		select (count(?account) as ?responses) 
		where 
		{
			?account insta:hasAnsweredQuestion ?question. 
			?account insta:hasChosenOption ?option 
		}
    } 
} GROUP BY  ?question ?option ?responses
Order by DESC(?responses)


2. Find all live posts with more than x viewers, x likes and x unique comments.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX owl: <http://www.w3.org/2002/07/owl#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX insta: <http://www.semanticweb.org/tonit/ontologies/2020/3/Instagram.owl#> 
SELECT  ?post  ?watchers ?comments ?likes
WHERE 
{
   ?people insta:isWatching ?post.
   {
      select (count(?people) as ?watchers) 
      where 
       {
         ?people insta:isWatching ?post
       }
    } 

   {
      select (count(?people) as ?comments) 
      where 
       {
         ?people insta:hasCommented ?post
       }
    }
   
     {
      select (count(?people) as ?likes) 
      where 
       {
         ?people insta:hasLiked ?post
       }
    }

} Group By ?post  ?watchers ?comments ?likes
Having(?watchers >  0 &&  ?comments > 0 && ?likes > 0)
